-- NULL 처리
SELECT * FROM EMP e;
SELECT COMM*1.1 FROM emp;
SELECT * FROM emp;
SELECT NVL(COMM, 0) FROM emp;				-- NVL(해당열, 대체값)
SELECT NVL(COMM, 0)*1.2 FROM emp;
SELECT NVL2(COMM, COMM*1.1, 0) FROM emp;	-- NVL2 (해당열, 정상값, NULL이면 대체값)
-- DECODE 함수 : 조건에 따라서 값을 선택
SELECT EMPNO, ENAME, JOB, SAL,
DECODE( JOB,				-- 해당열
	'MANAGER', SAL*1.1,		-- 'MANAGER'가 적용되는 값
	'SALESMAN', SAL*1.05,	-- 'SALESMAN' 적용되는 값
	'ALALYST', SAL,			
	SAL * 1.03) AS UPSAL	-- 그외 나머지
FROM emp;

SELECT EMPNO, ENAME, JOB, SAL, 
CASE JOB
	WHEN 'MANAGER' THEN SAL*1.1
	WHEN 'SALESMAN' THEN SAL*1.5
	WHEN 'ALALYST' THEN SAL
	ELSE SAL*1.03
END AS UPSAL
FROM emp;

-- 행 제한하기
SELECT * FROM emp;
SELECT * FROM EMP WHERE ROWNUM <= 5;

-- 다중함수(집계함수) : SUM, MIN, MAX, COUNT, AVG
SELECT * FROM emp;
SELECT COUNT(ENAME) FROM emp;
SELECT COUNT(COMM) FROM emp;				-- NULL은 제외
SELECT COUNT(ENAME) FROM emp WHERE DEPTNO = 30;
SELECT SUM(COMM) FROM emp;
SELECT SUM(DISTINCT SAL),					-- 중복제거 
		SUM(ALL SAL),						-- 중복포함 전체
		SUM(SAL)							-- 중복포함 전체
FROM emp;
SELECT COUNT(SAL), 
		COUNT(ALL SAL),
		COUNT(DISTINCT SAL)
FROM emp;

SELECT MAX(SAL), MIN(SAL) FROM emp WHERE DEPTNO = 10;
-- 20번 부서에서 신입과 최고참의 입사일 조회
SELECT MIN(HIREDATE) "최고참", MAX(HIREDATE) "신입" FROM emp WHERE DEPTNO = 20;
-- 30번 부서의 월급 평균 조회
SELECT AVG(SAL) FROM emp WHERE DEPTNO = 30;

-- GROUP BY 
SELECT DEPTNO , JOB, AVG(SAL) FROM emp GROUP BY DEPTNO, JOB ORDER BY DEPTNO;
----(코딩순서) SELECT * FROM emp WHERE ~~ GROUP BY ~~ ORDER BY ~~ 
----(실행순서) FROM ~~ WHERE ~~ GROUP BY ~~ SELECT ~~ ORDER BY ~~
SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP e 
WHERE AVG(SAL) >= 2000				-- WHERE절에서는 집계함수를 사용할 수 없다.
GROUP BY DEPTNO, JOB 
ORDER BY DEPTNO, JOB;

SELECT DEPTNO, JOB, AVG(SAL)
FROM EMP e 
--WHERE AVG(SAL) >= 2000				-- WHERE절에서는 집계함수를 사용할 수 없다.
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000
ORDER BY DEPTNO, JOB; 

SELECT DEPTNO, JOB, AVG(SAL)
FROM emp
WHERE SAL <= 3000
GROUP BY DEPTNO, JOB
HAVING AVG(SAL) >= 2000;

-- 오라클 조인
SELECT * FROM emp;
SELECT * FROM emp;
-- FROM절에서 테이블로 조인
SELECT * FROM emp, DEPT d ;
-- WHERE절에서 열이름 비교하는 조건식으로 조인
SELECT * FROM emp, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
ORDER BY EMPNO;

SELECT E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME 
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO
ORDER BY D.DEPTNO;

SELECT E.EMPNO, E.NAME, D.DEPTNO, D.DNAME
FROM EMP E, DEPT D
WHERE E.DEPTNO = D.DEPTNO AND SAL >= 3000;		-- 조인에 조건식 추가

SELECT * FROM emp e, SALGRADE s
WHERE e.SAL BETWEEN s.LOSAL AND s.HISAL;

SELECT e.EMPNO, e.ENAME, e.MGR,
		e2.EMPNO AS MGR_EMPNO, e2.ENAME AS MGR_ENAME
FROM EMP e, EMP e2
WHERE e.MGR = e2.EMPNO (+)
ORDER BY e.EMPNO;

SELECT e.EMPNO, e.ENAME, e.JOB, e.MGR, e.HIREDATE, e.SAL, e.COMM,
		d.DEPTNO, d.DNAME, d.LOC
FROM EMP e NATURAL JOIN DEPT d
-- ORDER BY DEPTNO, EMPNO;

SELECT * 
FROM EMP e JOIN DEPT d ON (e.DEPTNO = d.DEPTNO)
WHERE SAL >= 3000;
--ORDER BY DEPTNO , e.EMPNO;

SELECT e.EMPNO, e.ENAME, e.MGR,
	e2.EMPNO AS MGR_DMPNO,
	e2.ENAME AS MGR_ENAME
FROM EMP e LEFT OUTER JOIN EMP e2 ON(e.MGR = e2.EMPNO);			-- 왼쪽 외부 조인 MGR

-- 서버쿼리
SELECT * FROM emp e;
SELECT ROWNUM, E.* FROM EMP e;

SELECT * FROM (
  SELECT ROWNUM N, E.* FROM EMP e
)
WHERE N BETWEEN 1 AND 5;

SELECT * FROM (
  SELECT ROWNUM N, E.* FROM EMP e
)
WHERE N BETWEEN 6 AND 10;

SELECT * FROM (
  SELECT ROWNUM N, E.* FROM EMP e
)
WHERE N BETWEEN 11 AND 15;

-- 급여를 내림차순 정렬하고 상위 5명 정보 출력
SELECT * FROM (
  SELECT E.* FROM EMP e ORDER BY SAL DESC
)
WHERE ROWNUM BETWEEN 1 AND 5;

--SCOTT 보다 높은 급여를 받는 사원 출력
SELECT *
FROM EMP e 
WHERE SAL > (SELECT SAL FROM EMP WHERE ENAME ='SCOTT');

-- 'ALLEN'의 추가수장보다 높은 추가수당을 받는 사원 출력
SELECT *
FROM EMP e 
WHERE COMM > (SELECT COMM FROM EMP WHERE ENAME ='ALLEN');

-- 1. EMP 테이블에서 부서 인원이 4명보다 많은 부서의 부서번호, 인원수, 급여의 합을 출력
SELECT DEPTNO "부서번호", COUNT(DEPTNO) "인원수",SUM(SAL) "급여의 합" 
FROM EMP e 
GROUP BY DEPTNO 
HAVING COUNT(DEPTNO) > 4;

-- 2. EMP 테이블에서 가장 많은 사원이 속해있는 부서번호와 사원수를 출력
SELECT DEPTNO, COUNT(*) E_COUNT
FROM EMP
GROUP BY DEPTNO
HAVING COUNT(*) = (
    SELECT MAX(COUNT(*))
    FROM EMP 
    GROUP BY DEPTNO
)
ORDER BY COUNT(*) DESC;

-- 3. EMP 테이블에서 가장 많은 사원을 갖는 MGR의 사원번호를 출력
SELECT MAX(MGR) 
FROM EMP
WHERE ROWNUM = 1
GROUP BY MGR 
ORDER BY COUNT(*) DESC;


-- 4. EMP 테이블에서 부서번호가 10인 사원수와 30인 사원수를 각각 출력
SELECT DEPTNO, COUNT(*)
FROM EMP
WHERE DEPTNO IN (10,30) 
GROUP BY DEPTNO
ORDER BY DEPTNO;



